<?php
class QuadraticEquation {
    private float $a;
    private float $b;
    private float $c;

    // Constructor
    public function __construct(float $a, float $b, float $c) {
        $this->a = $a;
        $this->b = $b;
        $this->c = $c;
    }

    // Getters
    public function getA(): float {
        return $this->a;
    }

    public function getB(): float {
        return $this->b;
    }

    public function getC(): float {
        return $this->c;
    }

    // Get Discriminant
    public function getDiscriminant(): float {
        return ($this->b ** 2) - (4 * $this->a * $this->c);
    }

    // Root 1
    public function getRoot1(): ?float {
        $d = $this->getDiscriminant();
        if ($d < 0) return null; // no real root
        return (-$this->b + sqrt($d)) / (2 * $this->a);
    }

    // Root 2
    public function getRoot2(): ?float {
        $d = $this->getDiscriminant();
        if ($d < 0) return null; // no real root
        return (-$this->b - sqrt($d)) / (2 * $this->a);
    }
}

// Example usage
$eq = new QuadraticEquation(1, -3, 2); // xÂ² - 3x + 2 = 0

echo "a = " . $eq->getA() . "\n";
echo "b = " . $eq->getB() . "\n";
echo "c = " . $eq->getC() . "\n";
echo "Discriminant = " . $eq->getDiscriminant() . "\n";

$root1 = $eq->getRoot1();
$root2 = $eq->getRoot2();

if ($root1 !== null && $root2 !== null) {
    echo "Root 1 = $root1\n";
    echo "Root 2 = $root2\n";
} else {
    echo "No real roots.\n";
}
?>
